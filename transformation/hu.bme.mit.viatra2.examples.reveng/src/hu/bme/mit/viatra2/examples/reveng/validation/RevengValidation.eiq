package hu.bme.mit.viatra2.examples.reveng.validation

import "http://www.emftext.org/java/classifiers"
import "http://www.emftext.org/java/containers"
import "http://www.emftext.org/java/commons"
import "http://www.emftext.org/java/expressions"
import "http://www.emftext.org/java/members"
import "http://www.emftext.org/java/modifiers"
import "http://www.emftext.org/java/parameters"
import "http://www.emftext.org/java/references"
import "http://www.emftext.org/java/statements"
import "http://www.emftext.org/java/types"

uses hu.bme.mit.viatra2.examples.reveng.*

@Constraint(
	severity = "warning",
	location =  cl, 
	message = "Non-abstract class $cl.name$ extends State but does not implement static method Instance."
)
pattern stateWithMissingInstanceDefinition(cl : Class) {
	neg find classWithInstanceDefinition(cl, _);
	find notAbstractStateClass(cl);
}

pattern classWithInstanceDefinition(cl : Class, m : ClassMethod) {
	Class.members(cl, m);
	find nameOfElement("Instance", m);
	ClassMethod.annotationsAndModifiers(m, mod);
	Static(mod);
}